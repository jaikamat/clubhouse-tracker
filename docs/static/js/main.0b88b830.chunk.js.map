{"version":3,"sources":["components/TableRow.js","components/CreateTable.js","components/Search.js","components/DateRangePicker.js","components/App.js","index.js"],"names":["TableRow","props","cardRowData","cardData","Table","Row","Cell","CreateTable","rowData","data","length","celled","compact","unstackable","inverted","Header","HeaderCell","rowSpan","headerText","Body","map","d","idx","key","SearchBar","state","isLoading","term","autocomplete","results","inStockQty","soldQty","query","handleSearchChange","e","value","setState","setTimeout","re","RegExp","_","escapeRegExp","filter","result","test","title","handleResultSelect","a","axios","get","totalInv","historicSales","inventory_out","totalInvRes","historicInvRes","allNames","Object","keys","concat","uniqNames","uniq","formatArray","el","this","Grid","stackable","columns","Column","width","Search","onSearchChange","debounce","trailing","onResultSelect","loading","Content","React","Component","DateRangePicker","datesRange","historicInventoryLength","handleDateSelect","event","handleDateSubmit","split","date1","date2","submit","Form","Group","inline","Field","autoComplete","dateFormat","name","animation","placeholder","iconPosition","onChange","allowSameEndDate","pickerWidth","minDate","moment","subtract","maxDate","Button","disabled","onClick","App","inventory_in","searched","searchHistoricalData","params","entries","Container","style","marginTop","as","className","Subheader","Divider","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0b88b830.chunk.js","sourcesContent":["import React from 'react';\nimport { Table } from 'semantic-ui-react';\n\nconst TableRow = props => {\n    const cardRowData = props.cardData;\n\n    return (\n        <Table.Row>\n            <Table.Cell>{cardRowData[0]}</Table.Cell>\n            <Table.Cell>{cardRowData[1]}</Table.Cell>\n        </Table.Row>\n    );\n};\n\nexport default TableRow;\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport TableRow from './TableRow';\n\n// Move out into stateless component\nconst CreateTable = props => {\n    let rowData;\n\n    if (props.data.length === 0) {\n        rowData = [['No changes yet', '-']];\n    } else {\n        rowData = props.data;\n    }\n\n    return (\n        <Table celled compact unstackable inverted>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell rowSpan={3}>{props.headerText}</Table.HeaderCell>\n                    <Table.HeaderCell rowSpan={1}>#</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {rowData.map((d, idx) => (\n                    <TableRow key={idx} cardData={d} />\n                ))}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default CreateTable;\n","import React from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { Search, Grid, Header } from 'semantic-ui-react';\n\nclass SearchBar extends React.Component {\n    state = {\n        isLoading: false,\n        term: '',\n        autocomplete: [],\n        results: [],\n        inStockQty: null,\n        soldQty: null,\n        query: ''\n    };\n\n    async componentDidMount() {\n        const totalInvRes = await axios.get(\n            'https://us-central1-clubhouse-inventory-tracker.cloudfunctions.net/retrieveCardDataFromDB'\n        );\n        const historicInvRes = await axios.get(\n            'https://us-central1-clubhouse-inventory-tracker.cloudfunctions.net/retrieveHistoricChangeData'\n        );\n\n        const allNames = Object.keys(totalInvRes.data).concat(\n            Object.keys(historicInvRes.data.inventory_out)\n        );\n\n        const uniqNames = _.uniq(allNames);\n        const formatArray = uniqNames.map(el => {\n            return { title: el };\n        });\n\n        this.setState({ autocomplete: formatArray });\n    }\n\n    handleSearchChange = (e, { value }) => {\n        this.setState({ isLoading: true, term: value });\n\n        if (this.state.term.length < 1)\n            // reset the state\n            return this.setState({\n                isLoading: false,\n                term: '',\n                results: [],\n                inStockQty: null,\n                soldQty: null,\n                query: ''\n            });\n\n        setTimeout(() => {\n            const re = new RegExp(_.escapeRegExp(this.state.term), 'i');\n            const isMatch = result => re.test(result.title);\n\n            this.setState({\n                isLoading: false,\n                results: _.filter(this.state.autocomplete, isMatch)\n            });\n        }, 300);\n    };\n\n    handleResultSelect = async (e, { result }) => {\n        const query = result.title;\n        const totalInv = await axios.get(\n            'https://us-central1-clubhouse-inventory-tracker.cloudfunctions.net/retrieveCardDataFromDB'\n        );\n\n        const historicSales = await axios.get(\n            'https://us-central1-clubhouse-inventory-tracker.cloudfunctions.net/retrieveHistoricChangeData'\n        );\n\n        const inStockQty = totalInv.data[query] ? totalInv.data[query] : 0;\n        const soldQty = historicSales.data.inventory_out[query]\n            ? historicSales.data.inventory_out[query]\n            : 0;\n\n        this.setState({ inStockQty, soldQty, query });\n    };\n\n    render() {\n        let { isLoading, results, inStockQty, soldQty, query } = this.state;\n\n        if (inStockQty === 0) {\n            inStockQty = 'No';\n        }\n        if (soldQty === 0) {\n            soldQty = 'None';\n        }\n\n        return (\n            <Grid stackable={true}>\n                <Grid.Row columns={1}>\n                    <Grid.Column width={16}>\n                        <Search\n                            onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                                trailing: true\n                            })}\n                            onResultSelect={this.handleResultSelect}\n                            loading={isLoading}\n                            results={results}\n                        />\n                        {inStockQty && soldQty && (\n                            <Header inverted>\n                                <Header.Content>\n                                    <div>\n                                        {inStockQty} {inStockQty === 1 ? 'copy' : 'copies'} of{' '}\n                                        <em>{query}</em> in stock.\n                                        <br />\n                                        {soldQty} sold within the past 60 days.\n                                    </div>\n                                </Header.Content>\n                            </Header>\n                        )}\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport { Form, Button, Header } from 'semantic-ui-react';\nimport { DatesRangeInput } from 'semantic-ui-calendar-react';\n\nclass DateRangePicker extends React.Component {\n    state = { datesRange: '', historicInventoryLength: 1, loading: false };\n\n    async componentDidMount() {\n        const { data } = await axios.get(\n            'https://us-central1-clubhouse-inventory-tracker.cloudfunctions.net/retrieveHistoricDateRange'\n        );\n        this.setState({ historicInventoryLength: data.length });\n    }\n\n    handleDateSelect = (event, { value }) => {\n        this.setState({ datesRange: value });\n    };\n\n    handleDateSubmit = async () => {\n        this.setState({ loading: true });\n        const [date1, date2] = this.state.datesRange.split(' - ');\n        await this.props.submit(date1, date2);\n        this.setState({ loading: false });\n    };\n\n    render() {\n        const { datesRange, historicInventoryLength, loading } = this.state;\n\n        return (\n            <Form>\n                <Header inverted>\n                    <Header.Content>Inventory range search:</Header.Content>\n                </Header>\n                <Form.Group inline>\n                    <Form.Field>\n                        <DatesRangeInput\n                            autoComplete=\"off\"\n                            dateFormat=\"MM-DD-YYYY\"\n                            name=\"datesRange\"\n                            animation=\"none\"\n                            placeholder=\"From - To\"\n                            value={this.state.datesRange}\n                            iconPosition=\"left\"\n                            onChange={this.handleDateSelect}\n                            allowSameEndDate={true}\n                            pickerWidth=\"1000\"\n                            minDate={moment().subtract(historicInventoryLength, 'days')}\n                            maxDate={moment().subtract(1, 'days')}\n                        />\n                    </Form.Field>\n                    <Form.Field>\n                        <Button\n                            disabled={datesRange.length < 14}\n                            onClick={this.handleDateSubmit}\n                            loading={loading}\n                        >\n                            Submit\n                        </Button>\n                    </Form.Field>\n                </Form.Group>\n            </Form>\n        );\n    }\n}\n\nexport default DateRangePicker;\n","import React from 'react';\nimport axios from 'axios';\nimport CreateTable from './CreateTable';\nimport SearchBar from './Search';\nimport DateRangePicker from './DateRangePicker';\nimport { Container, Header, Grid, Divider } from 'semantic-ui-react';\n\nclass App extends React.Component {\n    state = {\n        inventory_in: [],\n        inventory_out: [],\n        searched: false\n    };\n\n    searchHistoricalData = async (date1, date2) => {\n        const { data } = await axios.get(\n            'https://us-central1-clubhouse-inventory-tracker.cloudfunctions.net/retrieveHistoricDateRange',\n            {\n                params: {\n                    date1,\n                    date2\n                }\n            }\n        );\n\n        const { inventory_in, inventory_out } = data;\n\n        this.setState({\n            inventory_in: Object.entries(inventory_in),\n            inventory_out: Object.entries(inventory_out),\n            searched: true\n        });\n    };\n\n    render() {\n        const { inventory_in, inventory_out, searched } = this.state;\n\n        return (\n            <Container style={{ marginTop: '20px' }}>\n                <Header inverted as=\"h1\">\n                    <Header.Content>\n                        <em>\"Got a lot of good things on sale, stranger\"</em>\n                        <i className=\"ss ss-pmei ss-2x ss-uncommon\"></i>\n                        <Header.Subheader>\n                            The Clubhouse's daily Magic: The Gathering singles intake and sales, at\n                            a glance\n                        </Header.Subheader>\n                    </Header.Content>\n                </Header>\n                <Divider />\n                <Header inverted as=\"h3\">\n                    <Header.Content>Search for a card:</Header.Content>\n                </Header>\n                <SearchBar />\n                <Divider />\n                <Header inverted as=\"h3\">\n                    <DateRangePicker submit={this.searchHistoricalData} />\n                </Header>\n                {searched && (\n                    <Grid stackable>\n                        <Grid.Row columns={2}>\n                            <Grid.Column>\n                                <CreateTable headerText={'Cards received'} data={inventory_in} />\n                            </Grid.Column>\n                            <Grid.Column>\n                                <CreateTable headerText={'Cards sold'} data={inventory_out} />\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                )}\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}