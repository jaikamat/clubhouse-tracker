{"version":3,"sources":["components/CreateTable.js","components/Search.js","components/DateRangePicker.js","components/App.js","index.js"],"names":["CreateTable","state","sort","direction","handleSort","property","setState","this","props","headerText","data","length","push","name","qty","dataTransform","_","sortBy","reverse","Table","celled","compact","unstackable","inverted","sortable","Header","Row","HeaderCell","rowSpan","onClick","sorted","Body","map","idx","key","Cell","React","Component","SearchBar","isLoading","term","autocomplete","results","inStockQty","soldQty","query","handleSearchChange","e","value","setTimeout","re","RegExp","escapeRegExp","filter","result","test","title","handleResultSelect","a","axios","get","totalInv","historicSales","inventory_out","totalInvRes","historicInvRes","allNames","Object","keys","concat","uniqNames","uniq","formatArray","el","Grid","stackable","columns","Column","width","Search","onSearchChange","debounce","trailing","onResultSelect","loading","Content","DateRangePicker","datesRange","historicInventoryLength","handleDateSelect","event","handleDateSubmit","split","date1","date2","submit","Form","Group","inline","Field","autoComplete","dateFormat","animation","placeholder","iconPosition","onChange","allowSameEndDate","pickerWidth","minDate","moment","subtract","maxDate","Button","disabled","App","inventory_in","searched","searchHistoricalData","params","Container","style","marginTop","as","className","Subheader","Divider","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.74620878.chunk.js","sourcesContent":["import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport _ from 'lodash';\n\nclass CreateTable extends React.Component {\n    state = { sort: 'name', direction: 'ascending' };\n\n    handleSort = property => {\n        const { sort, direction } = this.state;\n\n        if (property === sort) {\n            this.setState({\n                sort: property,\n                direction: direction === 'ascending' ? 'descending' : 'ascending'\n            });\n            return;\n        }\n\n        this.setState({ sort: property, direction: 'ascending' });\n    };\n\n    render() {\n        const { headerText, data } = this.props;\n        const { sort, direction } = this.state;\n\n        if (data.length === 0) {\n            data.push({\n                name: 'No changes',\n                qty: '-'\n            });\n        }\n\n        const dataTransform = _.sortBy(data, sort);\n\n        if (this.state.direction === 'descending') dataTransform.reverse();\n\n        return (\n            <Table celled compact unstackable inverted sortable>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell\n                            rowSpan={3}\n                            onClick={() => this.handleSort('name')}\n                            sorted={sort === 'name' ? direction : null}\n                        >\n                            {headerText}\n                        </Table.HeaderCell>\n                        <Table.HeaderCell\n                            rowSpan={1}\n                            onClick={() => this.handleSort('qty')}\n                            sorted={sort === 'qty' ? direction : null}\n                        >\n                            #\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {_.map(dataTransform, ({ name, qty }, idx) => (\n                        <Table.Row key={idx}>\n                            <Table.Cell>{name}</Table.Cell>\n                            <Table.Cell>{qty}</Table.Cell>\n                        </Table.Row>\n                    ))}\n                </Table.Body>\n            </Table>\n        );\n    }\n}\n\nexport default CreateTable;\n","import React from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { Search, Grid, Header } from 'semantic-ui-react';\n\nclass SearchBar extends React.Component {\n    state = {\n        isLoading: false,\n        term: '',\n        autocomplete: [],\n        results: [],\n        inStockQty: null,\n        soldQty: null,\n        query: ''\n    };\n\n    async componentDidMount() {\n        const totalInvRes = await axios.get(\n            'https://us-central1-clubhouse-inventory-tracker.cloudfunctions.net/retrieveCardDataFromDB'\n        );\n        const historicInvRes = await axios.get(\n            'https://us-central1-clubhouse-inventory-tracker.cloudfunctions.net/retrieveHistoricChangeData'\n        );\n\n        const allNames = Object.keys(totalInvRes.data).concat(\n            Object.keys(historicInvRes.data.inventory_out)\n        );\n\n        const uniqNames = _.uniq(allNames);\n        const formatArray = uniqNames.map(el => {\n            return { title: el };\n        });\n\n        this.setState({ autocomplete: formatArray });\n    }\n\n    handleSearchChange = (e, { value }) => {\n        this.setState({ isLoading: true, term: value });\n\n        if (this.state.term.length < 1)\n            // reset the state\n            return this.setState({\n                isLoading: false,\n                term: '',\n                results: [],\n                inStockQty: null,\n                soldQty: null,\n                query: ''\n            });\n\n        setTimeout(() => {\n            const re = new RegExp(_.escapeRegExp(this.state.term), 'i');\n            const isMatch = result => re.test(result.title);\n\n            this.setState({\n                isLoading: false,\n                results: _.filter(this.state.autocomplete, isMatch)\n            });\n        }, 300);\n    };\n\n    handleResultSelect = async (e, { result }) => {\n        const query = result.title;\n        const totalInv = await axios.get(\n            'https://us-central1-clubhouse-inventory-tracker.cloudfunctions.net/retrieveCardDataFromDB'\n        );\n\n        const historicSales = await axios.get(\n            'https://us-central1-clubhouse-inventory-tracker.cloudfunctions.net/retrieveHistoricChangeData'\n        );\n\n        const inStockQty = totalInv.data[query] ? totalInv.data[query] : 0;\n        const soldQty = historicSales.data.inventory_out[query]\n            ? historicSales.data.inventory_out[query]\n            : 0;\n\n        this.setState({ inStockQty, soldQty, query });\n    };\n\n    render() {\n        let { isLoading, results, inStockQty, soldQty, query } = this.state;\n\n        if (inStockQty === 0) {\n            inStockQty = 'No';\n        }\n        if (soldQty === 0) {\n            soldQty = 'None';\n        }\n\n        return (\n            <Grid stackable={true}>\n                <Grid.Row columns={1}>\n                    <Grid.Column width={16}>\n                        <Search\n                            onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                                trailing: true\n                            })}\n                            onResultSelect={this.handleResultSelect}\n                            loading={isLoading}\n                            results={results}\n                        />\n                        {inStockQty && soldQty && (\n                            <Header inverted>\n                                <Header.Content>\n                                    <div>\n                                        {inStockQty} {inStockQty === 1 ? 'copy' : 'copies'} of{' '}\n                                        <em>{query}</em> in stock.\n                                        <br />\n                                        {soldQty} sold within the past 60 days.\n                                    </div>\n                                </Header.Content>\n                            </Header>\n                        )}\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport { Form, Button, Header } from 'semantic-ui-react';\nimport { DatesRangeInput } from 'semantic-ui-calendar-react';\n\nclass DateRangePicker extends React.Component {\n    state = { datesRange: '', historicInventoryLength: 1, loading: false };\n\n    async componentDidMount() {\n        const { data } = await axios.get(\n            'https://us-central1-clubhouse-inventory-tracker.cloudfunctions.net/retrieveHistoricDateRange'\n        );\n        this.setState({ historicInventoryLength: data.length });\n    }\n\n    handleDateSelect = (event, { value }) => {\n        this.setState({ datesRange: value });\n    };\n\n    handleDateSubmit = async () => {\n        this.setState({ loading: true });\n        const [date1, date2] = this.state.datesRange.split(' - ');\n        await this.props.submit(date1, date2);\n        this.setState({ loading: false });\n    };\n\n    render() {\n        const { datesRange, historicInventoryLength, loading } = this.state;\n\n        return (\n            <Form>\n                <Header inverted>\n                    <Header.Content>Inventory range search:</Header.Content>\n                </Header>\n                <Form.Group inline>\n                    <Form.Field>\n                        <DatesRangeInput\n                            autoComplete=\"off\"\n                            dateFormat=\"MM-DD-YYYY\"\n                            name=\"datesRange\"\n                            animation=\"none\"\n                            placeholder=\"From - To\"\n                            value={this.state.datesRange}\n                            iconPosition=\"left\"\n                            onChange={this.handleDateSelect}\n                            allowSameEndDate={true}\n                            pickerWidth=\"1000\"\n                            minDate={moment().subtract(historicInventoryLength, 'days')}\n                            maxDate={moment().subtract(1, 'days')}\n                        />\n                    </Form.Field>\n                    <Form.Field>\n                        <Button\n                            disabled={datesRange.length < 14}\n                            onClick={this.handleDateSubmit}\n                            loading={loading}\n                        >\n                            Submit\n                        </Button>\n                    </Form.Field>\n                </Form.Group>\n            </Form>\n        );\n    }\n}\n\nexport default DateRangePicker;\n","import React from 'react';\nimport axios from 'axios';\nimport CreateTable from './CreateTable';\nimport SearchBar from './Search';\nimport DateRangePicker from './DateRangePicker';\nimport { Container, Header, Grid, Divider } from 'semantic-ui-react';\n\n// Maps the API response data into something usable for front-end sorting\nconst transformData = data => {\n    return data.map(d => {\n        return { name: d[0], qty: d[1] };\n    });\n};\n\nclass App extends React.Component {\n    state = {\n        inventory_in: [],\n        inventory_out: [],\n        searched: false\n    };\n\n    searchHistoricalData = async (date1, date2) => {\n        const { data } = await axios.get(\n            'https://us-central1-clubhouse-inventory-tracker.cloudfunctions.net/retrieveHistoricDateRange',\n            {\n                params: {\n                    date1,\n                    date2\n                }\n            }\n        );\n\n        const { inventory_in, inventory_out } = data;\n\n        this.setState({\n            inventory_in: inventory_in,\n            inventory_out: inventory_out,\n            searched: true\n        });\n    };\n\n    render() {\n        const { inventory_in, inventory_out, searched } = this.state;\n\n        return (\n            <Container style={{ marginTop: '20px' }}>\n                <Header inverted as=\"h1\">\n                    <Header.Content>\n                        <em>\"Got a lot of good things on sale, stranger\"</em>\n                        <i className=\"ss ss-pmei ss-2x ss-uncommon\"></i>\n                        <Header.Subheader>\n                            The Clubhouse's daily Magic: The Gathering singles intake and sales, at\n                            a glance\n                        </Header.Subheader>\n                    </Header.Content>\n                </Header>\n                <Divider />\n                <Header inverted as=\"h3\">\n                    <Header.Content>Search for a card:</Header.Content>\n                </Header>\n                <SearchBar />\n                <Divider />\n                <Header inverted as=\"h3\">\n                    <DateRangePicker submit={this.searchHistoricalData} />\n                </Header>\n                {searched && (\n                    <Grid stackable>\n                        <Grid.Row columns={2}>\n                            <Grid.Column>\n                                <CreateTable headerText={'Cards received'} data={inventory_in} />\n                            </Grid.Column>\n                            <Grid.Column>\n                                <CreateTable headerText={'Cards sold'} data={inventory_out} />\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                )}\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}